%Taylor Helms%DBSCAN Algorith Implementation in MATLAB% Load data.X = load('s2.dat');X = X(:,[1 2]);% DBSCAN% initialize parameters ( you can change them to see the difference)eps = 1.0;  %range for points to be considered neighborsminPts = 4; %minimum number of points as neighbors to create a cluster% initialize indices that contains the label/cluster info of every datapoint.labels = zeros(size(X,1), 1);% 0 - the datapoint hasn't been touched% -1 - the datapoint is considered as noise% any positive integer (e.g 1,2,3,4,...) cluster labelC = 1; % current cluster label starts with 1 % walk through all data points:[m, n] = size(X);for i = 1:m    % check every points, find neighbors, and extend clusters  if labels(i) == 0 || labels(i) == -1      %If label hasn't been checked or is noise    neighbors = findNeighbors(X, i, eps);   %finds the neighbors of point i    if length(neighbors) < minPts        labels(i) = -1;     %if not enough neighbors, labels point as noise    end    if length(neighbors) >= minPts        labels = extendCluster(X, labels, i, neighbors, C, eps, minPts);        C = C + 1;      %if enough neighbors, runs extendcluster then increments C    end  end    % END OF CODE    end  % Plotscatter(X(:,1),X(:,2),32,labels,'filled')